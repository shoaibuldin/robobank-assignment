package nl.rabobank.mongo.mapper;import lombok.experimental.UtilityClass;import nl.rabobank.mongo.model.PaymentAccountModel;import nl.rabobank.mongo.model.SavingsAccountModel;import nl.rabobank.service.account.Account;import nl.rabobank.service.account.PaymentAccount;import nl.rabobank.service.account.SavingsAccount;/** * Mapper for Account Models */@UtilityClasspublic class AccountMapper {    /**     * Map to Payment Account Model     *     * @return PaymentAccountModel     */    public static PaymentAccountModel mapToModel(PaymentAccount paymentAccount) {        return PaymentAccountModel.builder()                .accountHolderName(paymentAccount.getAccountHolderName())                .accountNumber(paymentAccount.getAccountNumber())                .balance(paymentAccount.getBalance())                .userId(paymentAccount.getUserId())                .build();    }    /**     * Map from Payment Account Model     *     * @return Account     */    public static Account mapFromModel(PaymentAccountModel paymentAccountModel) {        return PaymentAccount.builder()                .accountNumber(paymentAccountModel.getAccountNumber())                .accountHolderName(paymentAccountModel.getAccountHolderName())                .balance(paymentAccountModel.getBalance())                .userId(paymentAccountModel.getUserId())                .build();    }    /**     * Map to Savings Account Model     *     * @return SavingsAccountModel     */    public static SavingsAccountModel mapToModel(SavingsAccount savingsAccount) {        return SavingsAccountModel.builder()                .accountHolderName(savingsAccount.getAccountHolderName())                .accountNumber(savingsAccount.getAccountNumber())                .balance(savingsAccount.getBalance())                .userId(savingsAccount.getUserId())                .build();    }    /**     * Map from Savings Account Model     *     * @return Account     */    public static Account mapFromModel(SavingsAccountModel savingsAccountModel) {        return SavingsAccount.builder()                .accountNumber(savingsAccountModel.getAccountNumber())                .accountHolderName(savingsAccountModel.getAccountHolderName())                .balance(savingsAccountModel.getBalance())                .userId(savingsAccountModel.getUserId())                .build();    }}