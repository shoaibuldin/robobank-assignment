package nl.rabobank.mongo.dao.impl;import nl.rabobank.dao.PowerOfAttorneyDAO;import nl.rabobank.mongo.mapper.PowerOfAttorneyMapper;import nl.rabobank.mongo.model.PowerOfAttorneyModel;import nl.rabobank.mongo.repository.PowerOfAttorneyRepository;import nl.rabobank.service.authorizations.PowerOfAttorney;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.stereotype.Service;import java.util.List;import java.util.stream.Collectors;@Servicepublic class PowerOfAttorneyDAOImpl implements PowerOfAttorneyDAO {    private final Logger log = LoggerFactory.getLogger(PowerOfAttorneyDAOImpl.class);    private final PowerOfAttorneyRepository powerOfAttorneyRepository;    public PowerOfAttorneyDAOImpl(PowerOfAttorneyRepository powerOfAttorneyRepository) {        this.powerOfAttorneyRepository = powerOfAttorneyRepository;    }    @Override    public PowerOfAttorney save(PowerOfAttorney powerOfAttorney) {        log.debug("Save power of attorney {}", powerOfAttorney);        PowerOfAttorneyModel powerOfAttorneyModel = PowerOfAttorneyMapper.mapToModel(powerOfAttorney);        powerOfAttorneyRepository.save(powerOfAttorneyModel);        return PowerOfAttorneyMapper.mapFromModel(powerOfAttorneyModel);    }    @Override    public List<PowerOfAttorney> findByGranteeName(String username) {        log.debug("Find by Grantee Name {}", username);        return powerOfAttorneyRepository.findByGranteeName(username).stream().map(PowerOfAttorneyMapper::mapFromModel)                .collect(Collectors.toList());    }}